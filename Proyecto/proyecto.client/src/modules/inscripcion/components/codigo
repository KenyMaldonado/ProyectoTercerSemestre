// ... existing code ...
<Form.Group className="mb-3">
  <Form.Label>Departamento</Form.Label>
  <Form.Select
    value={player.departamentoId}
    onChange={(e) => {
      updatePlayer(
        index,
        "departamentoId",
        e.target.value
      );
      updatePlayerDependentFields(
        index,
        "departamentoId",
        e.target.value
      );
    }}
    disabled={player.jugadorVerificado} // Cambiar esto
  >
    <option value="">Selecciona un departamento</option>
    {departamentos.map((dep) => (
      <option
        key={dep.departamentoId}
        value={dep.departamentoId}
      >
        {dep.nombre}
      </option>
    ))}
  </Form.Select>
</Form.Group>
// ... existing code ...
<Form.Group className="mb-3">
  <Form.Label>Municipio</Form.Label>
  <Form.Select
    value={player.municipioId}
    onChange={(e) =>
      updatePlayer(index, "municipioId", e.target.value)
    }
    required
    disabled={player.jugadorVerificado} // Agregar esto
  >
    <option value="">Selecciona un municipio</option>
    {player.municipiosFiltrados &&
    player.municipiosFiltrados.length > 0
      ? player.municipiosFiltrados.map((mun) => (
          <option
            key={mun.municipioId}
            value={mun.municipioId}
          >
            {mun.nombre}
          </option>
        ))
      : municipios
          .filter(
            (m) =>
              m.departamentoId ===
              parseInt(player.departamentoId || "0")
          )
          .map((mun) => (
            <option
              key={mun.municipioId}
              value={mun.municipioId}
            >
              {mun.nombre}
            </option>
          ))}
  </Form.Select>
</Form.Group>
// ... existing code ...